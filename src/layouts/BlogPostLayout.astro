---
import MdiTwitter from "~icons/mdi/twitter";
import MdiFacebook from "~icons/mdi/facebook";
import MdiLinkedin from "~icons/mdi/linkedin";
import MdiWhatsapp from "~icons/mdi/whatsapp";
import MdiTelegram from "~icons/mdi/telegram";
import MdiReddit from "~icons/mdi/reddit";
import MdiEmail from "~icons/mdi/email";
import MdiPinterest from "~icons/mdi/pinterest";

import { CollectionEntry, getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import TableOfContent from "../components/TableOfContent.astro";
import ScrollToTopButton from "../components/ScrollToTopButton";
import { Image } from "astro:assets";
import SeriesList from "../components/SeriesList.astro";
import SeriesCard from "../components/SeriesCard.astro";

type Blog = CollectionEntry<"blog">["data"];

type Heading = {
  depth: number;
  slug: string;
  text: string;
};

export interface Props extends Blog {
  readingTime: string;
  headings: Heading[];
  url: string;
}

const {
  title,
  description,
  tags,
  pubDate,
  updatedDate,
  citations,
  cover,
  coverAlt,
  readingTime,
  headings,
  seriesId,
  orderInSeries,
  url,
} = Astro.props;

const series = (await getCollection("series")).find((s) => s.data.id === seriesId);
---

<BaseLayout {title} {description} {pubDate} {updatedDate} {url} {citations} isPost>
  <div
    class="prose prose-slate max-w-none prose-headings:scroll-my-20 prose-a:underline-offset-2 prose-a:decoration-blue-600 prose-img:rounded-lg dark:prose-invert"
  >
    <h1>{title}</h1>
    <div class="font-normal text-xs uppercase space-y-2">
      <div class="flex flex-wrap items-center space-x-1">
        <span>
          <FormattedDate date={pubDate} />
        </span>
        {
          updatedDate && (
            <>
              <span>{"•"}</span>
              <span>
                Atualizado em <FormattedDate date={updatedDate} />
              </span>
            </>
          )
        }
        <span>{"•"}</span>
        <span>{readingTime}</span>
      </div>
      <div class="flex space-x-2 items-center">
        {
          tags.map((tag: unknown) => (
            <a
              href={`/tags/${tag}`}
              class="no-underline bg-zinc-800 text-white dark:text-black dark:bg-zinc-300 hover:bg-zinc-950 dark:hover:bg-zinc-100 
              transition-colors duration-300 ease-in-out text-xs font-semibold uppercase tracking-wider
              p-1 px-4 rounded"
            >
              {tag}
            </a>
          ))
        }
      </div>
    </div>
    <div class="not-prose">
      {cover && coverAlt && <Image class="my-10 mb-1 rounded-lg" src={cover} alt={coverAlt} />}
    </div>
    <div class="md:flex space-x-10">
      <div class="w-full">
        <div class="not-prose my-10">
          {series && <SeriesCard series={series} order={orderInSeries} />}
        </div>
        <article>
          <slot />
        </article>
        {
          citations && (
            <div>
              <h2>Referências:</h2>
              <ul>
                {citations.map((citation: any) => (
                  <li>
                    {citation.author.toUpperCase()}.
                    <a href={citation.url} target="_blank" rel="noopener noreferrer">
                      {citation.title}
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
        <div>
          <h3>Compartilhe esse artigo</h3>
          <div class="flex space-x-4 items-center">
            <a
              href={`https://twitter.com/intent/tweet?text=${title}&url=${url}`}
              target="_blank"
              rel="noopener noreferrer"
              class="no-underline bg-[#1DA1F2] text-white hover:bg-[#1da0f2dc] transition-colors duration-300 ease-in-out font-semibold uppercase tracking-wider p-1 px-2 rounded"
            >
              <MdiTwitter />
            </a>
            <a
              href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}
              target="_blank"
              rel="noopener noreferrer"
              class="no-underline bg-[#3B5998] text-white hover:bg-[#4267B2] transition-colors duration-300 ease-in-out font-semibold uppercase tracking-wider p-1 px-2 rounded"
            >
              <MdiFacebook />
            </a>
            <a
              href={`https://www.linkedin.com/shareArticle?mini=true&url=${url}&title=${title}&summary=${description}`}
              target="_blank"
              rel="noopener noreferrer"
              class="no-underline bg-[#0077B5] text-white hover:bg-[#0077B5dc] transition-colors duration-300 ease-in-out font-semibold uppercase tracking-wider p-1 px-2 rounded"
            >
              <MdiLinkedin />
            </a>
            <a
              href={`https://api.whatsapp.com/send?text=${title} ${url}`}
              target="_blank"
              rel="noopener noreferrer"
              class="no-underline bg-[#25D366] text-white hover:bg-[#20b657] transition-colors duration-300 ease-in-out font-semibold uppercase tracking-wider p-1 px-2 rounded"
            >
              <MdiWhatsapp />
            </a>
            <a
              href={`https://telegram.me/share/url?url=${url}&text=${title}`}
              target="_blank"
              rel="noopener noreferrer"
              class="no-underline bg-[#0088CC] text-white hover:bg-[#0077B5] transition-colors duration-300 ease-in-out font-semibold uppercase tracking-wider p-1 px-2 rounded"
            >
              <MdiTelegram />
            </a>
          </div>
        </div>
      </div>
      {
        headings.length > 0 && (
          <nav class="hidden text-sm space-y-2 mt-9 mb-2 lg:block lg:w-4/12 h-[80vh] sticky top-20 z-40 overflow-auto">
            <span class="font-black dark:text-white text-black uppercase">Índice</span>
            <TableOfContent headings={headings} />
          </nav>
        )
      }
    </div>
    <div class="hidden sm:block float-right">
      <ScrollToTopButton client:idle />
    </div>
  </div>
</BaseLayout>

<script>
  const codeBlocks = Array.from(document.querySelectorAll("div[data-rehype-pretty-code-fragment]"));

  for (let codeBlock of codeBlocks) {
    const codeBlockPre = codeBlock.getElementsByTagName("pre")[0];

    // Copy button
    const copyButton = document.createElement("button");
    copyButton.className =
      "p-1 px-2 rounded-md text-slate-300 text-xs bg-slate-800 hover:bg-slate-700";
    copyButton.innerHTML = "Copiar";

    // Header title
    const titleSpan = document.createElement("span");
    titleSpan.className = "text-blue-400";

    // Header div
    const headerDiv = document.createElement("div");
    headerDiv.className =
      "flex w-full bg-slate-950 border-b-[0.5px] border-blue-400 rounded-t-lg mt-10 text-base items-center justify-between py-2 px-4";

    // Current title
    const titleDiv = codeBlock.querySelector("div[data-rehype-pretty-code-title]");

    // Set title to the language name if no current title is set
    if (titleDiv) {
      const title = titleDiv.innerHTML;
      titleSpan.innerHTML = title;
      codeBlock.removeChild(titleDiv);
    } else {
      titleSpan.innerHTML = codeBlockPre.getAttribute("data-language") as string;
    }

    headerDiv.appendChild(titleSpan);
    headerDiv.appendChild(copyButton);
    codeBlock.prepend(headerDiv);

    copyButton.addEventListener("click", async () => {
      await copyCode(codeBlock, copyButton);
    });
  }

  async function copyCode(block: Element, button: HTMLButtonElement) {
    const code = block.querySelector("code") as HTMLElement;
    const text = code.innerText as string;
    await navigator.clipboard.writeText(text);
    button.innerText = "Copiado!";

    setTimeout(() => {
      button.innerText = "Copiar";
    }, 750);
  }
</script>

<style>
  @import url("https://fonts.googleapis.com/css2?family=Nunito:wght@300;400&display=swap");

  article {
    font-family: "Nunito", sans-serif;
    font-size: 1.125rem;
    line-height: 1.75rem;
    color: #4b5563;
  }
</style>
