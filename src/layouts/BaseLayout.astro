---
import { Schema } from "astro-seo-schema";

import "../styles/global.css";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import MobileMenu from "../components/MobileMenu.astro";

type Citation = {
  title: string;
  url: string;
  author: string;
};

export interface Props {
  title?: string;
  description?: string;
  pubDate?: Date;
  updatedDate?: Date;
  image?: string;
  isPost?: boolean;
  url?: string;
  citations?: Citation[];
}

const { title, description,pubDate, updatedDate, image, isPost, url, citations } = Astro.props;
---

<!DOCTYPE html>
<html lang="pt-BR" class="font-sans dark">
  <head>
    <BaseHead title={title} description={description} />
    {isPost && (
      <Schema
        item={
          {
            "@context": "https://schema.org",
            "@type": "BlogPosting",
            headline: title,
            description,
            image: image,
            datePublished: pubDate?.toLocaleString(),
            dateModified: updatedDate?.toLocaleString(),
            author: {
              "@type": "Person",
              name: "JosafÃ¡ Marengo",
            },
            inLanguage: "pt-BR",
            "url": url,
            "citation": citations?.map((citation) => ({
              "@type": "CreativeWork",
              "headline": citation.title,
              "url": citation.url,
              "author": {
                "@type": "Organization",
                "name": citation.author,
              },
            })),
          } as any
        }
      />
    )}
  </head>
  <body
    class="relative container mx-auto md:max-w-4xl px-4  space-y-10 flex flex-col justify-between h-screen text-zinc-800 bg-zinc-50 dark:text-zinc-200 dark:bg-zinc-950"
  >
    <Header />
    <main class="flex-grow sm:pt-20">
      <slot />
    </main>
    <Footer />
    <MobileMenu />

    <script is:inline>
      const theme = (() => {
        if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
          return localStorage.getItem("theme");
        }

        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }

        return "light";
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }

      window.localStorage.setItem("theme", theme);
    </script>
  </body>
</html>
